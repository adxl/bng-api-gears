name: Gears API CI

on:
  push:
    branches:
     - "*/*"
     - "master"

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install
        run: npm install

      - name: Build
        run: npm run build

      - name: Tests
        run: npm run test:cov

  publish:
    needs: build
    runs-on: ubuntu-20.04

    if: github.ref_name == 'master'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}

      - name: Build
        run: docker compose -f docker-compose.prod.yaml build

      - name: Push
        run: docker compose -f docker-compose.prod.yaml push

  deploy:
    needs: publish
    runs-on: ubuntu-20.04

    if: github.ref_name == 'master'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        run: |
          sed -i 's|@DATABASE_URL@|${{ secrets.DATABASE_URL }}|g' ./docker-compose.deploy.yaml
          sed -i 's|@SENTRY_DSN@|${{ secrets.SENTRY_DSN }}|g' ./docker-compose.deploy.yaml
          sed -i 's|@BUCKET_URL@|${{ secrets.BUCKET_URL }}|g' ./docker-compose.deploy.yaml
          sed -i 's|@BUCKET_NAME@|${{ secrets.BUCKET_NAME }}|g' ./docker-compose.deploy.yaml
          sed -i 's|@AWS_S3_ACCESS_KEY@|${{ secrets.AWS_S3_ACCESS_KEY }}|g' ./docker-compose.deploy.yaml
          sed -i 's|@AWS_S3_SECRET_KEY@|${{ secrets.AWS_S3_SECRET_KEY }}|g' ./docker-compose.deploy.yaml
          sed -i 's|@AWS_S3_REGION@|${{ secrets.AWS_S3_REGION }}|g' ./docker-compose.deploy.yaml
          sed -i 's|@INTERNAL_BASIC@|${{ secrets.INTERNAL_BASIC }}|g' ./docker-compose.deploy.yaml

      - name: Config
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: 'docker-compose.deploy.yaml'
          target: '/root/deployments/gears'

      - name: Run
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: docker stack deploy -c deployments/gears/docker-compose.deploy.yaml gears
